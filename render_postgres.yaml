# Render.com Service Configuration for HR LINE Chatbot System with PostgreSQL
version: 1

services:
  # Main Web Service
  - type: web
    name: line-chatbot-hr-system
    env: python
    plan: free
    region: singapore  # Changed to singapore for better latency
    runtime: python
    pythonVersion: "3.11"
    buildCommand: |
      pip install --upgrade pip setuptools wheel
      pip install --no-cache-dir -r requirements_postgres.txt
      python migrate_to_postgresql.py
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /health
    
    # Environment Variables
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: ENVIRONMENT
        value: production
      - key: HOST
        value: 0.0.0.0
      - key: RELOAD
        value: false
      - key: DEBUG
        value: false
      
      # Database Configuration
      - key: DATABASE_URL
        sync: false  # Set in Render Dashboard
      - key: DB_TYPE
        value: postgresql
      
      # LINE Bot (from Render Dashboard)
      - key: LINE_CHANNEL_SECRET
        sync: false
      - key: LINE_CHANNEL_ACCESS_TOKEN
        sync: false
      
      # Google Gemini AI
      - key: GEMINI_API_KEY
        sync: false
      
      # Telegram (from Render Dashboard)  
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_CHAT_ID
        sync: false
      
      # Security
      - key: SECRET_KEY
        generateValue: true
      
      # Application Settings
      - key: APP_TITLE
        value: LINE Chatbot Admin System
      - key: APP_VERSION
        value: 2.9.4
      - key: TZ
        value: Asia/Bangkok
      - key: SESSION_EXPIRE_MINUTES
        value: 43200
      - key: MAX_FILE_SIZE_MB
        value: 10
      
      # Performance Settings
      - key: NOTIFICATION_QUEUE_SIZE
        value: 100
      - key: HISTORY_RETENTION_DAYS
        value: 90
      - key: ANALYTICS_UPDATE_INTERVAL
        value: 300

    # No disk needed for PostgreSQL
    # disk:
    #   name: chatbot-data
    #   mountPath: /opt/render/project/src
    #   sizeGB: 1

    # Auto-deploy settings
    autoDeploy: true
    
    # Health check
    healthCheckPath: /health
    healthCheckTimeout: 30
    
    # Custom headers for security
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /*
        name: X-XSS-Protection
        value: 1; mode=block

# Optional: Cron Jobs for maintenance
# cronjobs:
#   - name: cleanup-old-messages
#     schedule: "0 2 * * *"  # Run at 2 AM daily
#     command: python scripts/cleanup_old_messages.py
#     region: singapore
#     env: python
#     plan: free
